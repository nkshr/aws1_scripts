#!/bin/sh

prev=null

log=n

storage=f:/aws

ahrsdev=/dev/ttyUL4
ahrscom=23

gps=n
gpscom=4
gpsdev=/dev/ttyUL5

ahrs=n
ahrsdev=/dev/ttyUL4
ahrscom=23

gffcom=0
gffdev=/dev/ttyUL3

apcom=0
apdev=/dev/ttyUL2

ais=n
aiscom=24
aisdev=/dev/ttyUL1

map=n
mapath=c:/cygwin/home/yhmtmt/share/aws1_map

rec=no
std=n
tlcc=n
alg=quad


if [ $# -lt 1 ]; then
    echo "Usage: aws1_ui.aws log<#> [options]"
    exit
fi

arg_prev="null"
log_name="null"

for arg in $*
do
    if [ $arg_prev = "log" ]; then
	log_name=$arg
    else
	case $arg in
	    "log") log=y;;
	    "ahrs") ahrs=y;;
	    "ais") ais=y;;
	    "gps") gps=y;;
	    "log") log=y;;
	    "map") map=y;;
	    "rec") rec=y;;
	    "std") std=y;;
	esac
    fi
    arg_prev=$arg
done

source ./path
source ./$log_name

channel state state
channel ais_obj ais_obj
channel wp wp
channel aws1_ctrl_stat aws1_ctrl_stat
channel aws1_ctrl_inst aws1_ctrl_ui
channel aws1_ctrl_inst aws1_ctrl_ap1
channel imgr img1
channel imgr img2

# User interface filter
filter aws1_ui aws1_ui -i -o
fset aws1_ui ch_state state
fset aws1_ui ch_ais_obj ais_obj
fset aws1_ui ch_wp wp
fset aws1_ui imv img12d
fset aws1_ui ch_ctrl_stat aws1_ctrl_stat
#fset aws1_ui ch_ctrl_inst aws1_ctrl_ui
fset aws1_ui width 1024 height 768
fset aws1_ui verb no
fset aws1_ui js 0
fset aws1_ui mode normal
fset aws1_ui svw $rec
fset aws1_ui storage $storage

filter wp_manager wp_manager -i -o
fset wp_manager ch_state state
fset wp_manager ch_wp wp


CH_IMGL=img1
CH_IMGR=img2
FLIP_X=yes
FLIP_Y=no

#Stereo disparity calculator
if [ $std = y ]; then
    channel imgr img1c
    channel imgr img2c
    
    filter lcc lcc1 -i -o
    fset lcc1 ch_in img1 ch_out img1c
    fset lcc1 flipx yes flipy yes
    fset lcc1 update $tlcc
    fset lcc1 alg $alg
    fset lcc1 alpha 0.0001 range 3 sigma 3 bias 0.0
    fset lcc1 qs 0.000001 qb 0.00001 
    fset lcc1 fmap $path_aws/campar/lcc1.yml
    fset lcc1 fcp $camparl
    
    filter lcc lcc2 -i -o
    fset lcc2 ch_in img2 ch_out img2c
    fset lcc2 flipx yes flipy yes
    fset lcc2 update $tlcc
    fset lcc2 alg $alg
    fset lcc2 alpha 0.0001 range 3 sigma 3 bias 0.0
    fset lcc2 qs 0.000001 qb 0.00001 
    fset lcc2 fmap $path_aws/campar/lcc2.yml
    fset lcc2 fcp $camparr
    
    channel obst obst
    channel imgr disp
    channel imgr rimg1
    channel imgr rimg2
    
    filter stereod st -i -o
    fset st ch_caml img1c ch_camr img2c ch_disp disp ch_obst obst ch_state state
    fset st ch_rcam1 rimg1 ch_rcam2 rimg2
    fset st fcpl $camparl
    fset st fcpr $camparr
    fset st fstp $campars
    fset st numDisparities 64 blockSize 3 speckleRange 1 speckleWindowSize 800
    fset st flipx no flipy no

    fset aws1_ui ch_obst obst
    fset aws1_ui ch_disp disp
    CH_IMGL=rimg1
    CH_IMGR=rimg2
    FLIP_X=no
    FLIP_Y=yes
fi

fset aws1_ui ch_img $CH_IMGL
fset aws1_ui ch_img2 $CH_IMGR
fset aws1_ui flip_img_x $FLIP_X flip_img_y $FLIP_Y
fset aws1_ui flip_img2_x $FLIP_X flip_img2_y $FLIP_Y


#Object manager
filter obj_manager obj_manager -i -o
fset obj_manager ch_state state
fset obj_manager ch_ais_obj ais_obj
fset obj_manager range 10000
fset obj_manager dtold 1800000000

if [ $map = y ]; then
    channel map map

    filter map map -i -o
    fset map ch_map map
    fset map path $mapath
    fset map list list.txt

    fset aws1_ui ch_map map
fi

if [ $log = n ]; then

#Autopilot filter
    filter aws1_ap aws1_ap -i -o
    fset aws1_ap ch_state state
    fset aws1_ap ch_ctrl_stat aws1_ctrl_stat
    fset aws1_ap ch_ctrl_inst aws1_ctrl_ap1
    
# test filter
    filter aws1_ui_test aws1_ui_test -i -o
    fset aws1_ui_test ch_state state
    fset aws1_ui_test ch_ais_obj ais_obj
    fset aws1_ui_test ch_ctrl_ui aws1_ctrl_ui
    fset aws1_ui_test ch_ctrl_ap1 aws1_ctrl_ap1
#fset aws1_ui_test ch_ctrl_ap2
    fset aws1_ui_test ch_ctrl_stat aws1_ctrl_stat
    
    fset aws1_ui_test meng_max_rmc 21 meng_nuf_rmc 91 meng_nut_rmc 107 meng_nub_rmc 124 meng_min_rmc 151
    fset aws1_ui_test seng_max_rmc 24 seng_nuf_rmc 91 seng_nut_rmc 107 seng_nub_rmc 124 seng_min_rmc 151
    fset aws1_ui_test rud_max_rmc 220 rud_nut_rmc 111 rud_min_rmc 0
    fset aws1_ui_test rud_sta_max 15 rud_sta_nut 90 rud_sta_min 172
    fset aws1_ui_test meng_max 228 meng_nuf 151 meng_nut 129 meng_nub 104 meng_min 78
    fset aws1_ui_test seng_max 226 seng_nuf 153 seng_nut 130 seng_nub 103 seng_min 78
    fset aws1_ui_test rud_max 5 rud_nut 127 rud_min 250
    fset aws1_ui_test rud_sta_out_max 243 rud_sta_out_nut 143 rud_sta_out_min 39
    fset aws1_ui_test awsrud 127 awsmeng 127 awsseng 127
    
#state setting
    fset aws1_ui_test lat 35.55061306 lon 140.11532166 alt 0 cog 180 sog 5 yaw 135 depth 8 
    
    if [ $ahrs = y ]; then
	fset aws1_ui_test ahrs y
	
	filter ahrs ahrs -i -o
	fset ahrs ch_state state
	fset ahrs br 57600
	fset ahrs port $ahrscom
	fset ahrs dev $ahrsdev
	fset ahrs cmd ot
    fi
    
    filter aws1_nmea_sw aws1_nmea_sw -i -o
    fset aws1_nmea_sw state state
    fset aws1_nmea_sw verb no
    
    if [ $gps = y ]; then
	fset aws1_ui_test gps y
	channel nmea gps_in
	channel nmea gps_out
	
	filter nmea gps -i gps_in -o gps_out
	fset gps src COM
	fset gps bps 4800
	fset gps port $gpscom
	fset gps fnmea $gpsdev
	fset gps verb n
	
	fset aws1_nmea_sw gps_nmea_i gps_out
	fset aws1_nmea_sw gps_nmea_o gps_in
	fset aws1_nmea_sw gpsint 1
    fi

    if [ $ais = y ]; then
	channel nmea ais_in
	channel nmea ais_out
	
	filter nmea ais -i ais_in -o ais_out
	fset ais src COM
	fset ais bps 38400
	fset ais port $aiscom
	fset ais fnmea $aisdev
	fset ais verb n
	
	fset aws1_nmea_sw ais_obj ais_obj
	fset aws1_nmea_sw ais_nmea_i ais_out
	fset aws1_nmea_sw ais_nmea_o ais_in
	fset aws1_nmea_sw aisint 1
    fi

    go
else
    filter read_ch_log log -i -o img1 img2 state aws1_ctrl_ui aws1_ctrl_ap1 aws1_ctrl_stat ais_obj
    fset log path $path_log
    if [ $logtime = 0 ]; then
	echo "log <start time in sec>"
    else
	echo "replay from $logtime"
	online no
	go $logtime
    fi
fi

