#!/bin/sh

. ../common/path

dbg=n
for arg in $*
do
    case $arg in
	"dbg") dbg=y
    esac
done

channel imgr img
channel imgr imgc

addr=$ip_cam1
fmt=Bayer8
ttrig=500000

if [ $dbg = y ]; then
    campar=$path_cam1/../tum/params.yml
else
    campar=$path_cam1/par.yml
fi

echo "Camera $ip_cam1 $fmt"
echo "Camera parameter $campar"

#lcc (only for mono16)
#filter lcc lcc -i -o
#fset lcc ch_in img ch_out imgc
#fset lcc flipx yes flipy yes
#fset lcc qs 0.000001 qb 0.00001
#fset lcc fcp $campar

#filters for orb slam
channel orb_slam_sys sys
channel orb_slam_kfdb kfdb
channel orb_slam_kf kf_tr
channel orb_slam_kf kf_lm
channel orb_slam_map map
channel orb_slam_frm frm
channel orb_slam_trj trj

filter orb_slam_tracker tr -i -o
fset tr ch_sys sys ch_cam imgc ch_kfdb kfdb ch_kf_mapper kf_tr ch_map map ch_trj trj ch_frm frm
fset tr fcp $campar fvoc $path_orb_voc undist no rgb yes
fset tr num_features 1000 scale_factor 1.2 num_levels 8 th_fast_ini 20 th_fast_min 7

filter orb_slam_local_mapper lm -i -o
fset lm ch_sys sys ch_kf_tracker kf_tr ch_kf_loop_closer kf_lm ch_map map

filter orb_slam_loop_closer lc -i -o
fset lc ch_sys sys ch_kf_mapper kf_lm ch_map map ch_kfdb kfdb

filter orb_slam_viewer vw -i -o
fset vw ch_sys sys ch_map map ch_trj trj ch_frm frm
fset vw sz_kf 0.05 lw_kf 1 lw_g 0.9 sz_pt 2 sz_cam 0.08 lw_cam 3
fset vw eyex 0 eyey -0.4 eyez -0.4 fovy 120 zmin 0.1 zmax 1000
fset vw mode f draw_kf yes draw_g yes
fset vw width 1920 height 1200
fset vw mode fm

# camera
if [ $dbg = y ]; then
    datapath=c:/cygwin64/home/yhmtm/data/rgbd_dataset_freiburg1_xyz/rgb
    awscd $datapath
    filter imread cam -i -o imgc
    fset cam flst ${datapath}/awslist.txt
    fset cam Interval 6
else
    fset tr  undist yes

    filter avtmono cam -i -o img
    fset cam host $ip_cam1
    fset cam PacketSize 8228
    fset cam PixelFormat $fmt
    fset cam ExposureMode Auto
    fset cam FrameStartTriggerMode Software
    fset cam Ttrig $ttrig
    #fset cam verb yes
    
    filter debayer deb -i img -o imgc
    fset deb bayer RG8
fi

go
