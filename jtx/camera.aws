#!/bin/sh

. ../common/path

cam=1
rep=n
log=n
logtime=0
fmt=Bayer8
ttrig=100000
#ttrig=500000
free=n

for arg in $*
do
	case $prev_arg in
	     "cam") cam=$arg;;
	     "rep") rep=$arg
		    log=n;;
	     "log") log=$arg
		    rep=n;;
	esac
	case $arg in
	    "free") free=y;;
	esac
	prev_arg=$arg
done

case $cam in
     "1") fmt=Bayer8
          addr=$ip_cam1;; 
     "2") fmt=Bayer8
          addr=$ip_cam2;;
     "3") fmt=Mono16
          addr=$ip_cam3;;
     "4") fmt=Mono16
          addr=$ip_cam4;;
esac

channel state state
channel imgr img
channel imgr imgc

if [ $rep = "n" ]; then
   filter tsync tsync -i -o
   fset tsync host_svr $ip_zed
   fset tsync port_svr 20200

   filter ch_share share -i -o state
   fset share port_dst 20150
   fset share host_dst $ip_zed
   
    echo "Camera IP:$addr F:$fmt T:$ttrig"
    filter avtmono cam -i -o img
    fset cam host $addr
    fset cam PacketSize 8228
    fset cam PixelFormat $fmt
    if [ $free = "n" ]; then
	fset cam FrameStartTriggerMode Software
    else
	fset cam FrameStartTriggerMode Freerun
	fset cam BandwidthCtrlMode StreamBytesPerSecond
    fi
    fset cam Ttrig $ttrig   
    fset cam GvspTimeout 150
#    fset cam ExposureMode Manual
#    fset cam ExposureValue 1000    
    fset cam ExposureMode Auto
    fset cam ExposureAutoMax 1000
    fset cam ExposureAutoMin 100
else
    echo "Replay cam$cam t=$rep"
   filter read_ch_log log_cam$cam -i -o img
   fset log_cam$cam path $path_log
   
   filter read_ch_log log_state -i -o state
   fset log_state path $path_log
fi
    
filter debayer deb -i img -o imgc
fset deb bayer RG8   

if [ $log != "n" ]; then
    echo "Logging $log"
   filter write_ch_log log_cam$cam -i img -o 
   fset log_cam$cam path $path_log
   
   filter write_ch_log log_state -i state -o
   fset log_state path $path_log   
fi

filter glimv win -i imgc -o 
fset win width 1600 height 900
cyc 0.01
if [ $rep != "n" ]; then
    online no
    go $rep
else
    go
fi
